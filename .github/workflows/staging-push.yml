name: Staging - Push

env:
  branch: staging
  docker-repo: czap/${{secrets.PROJECT_NAME}}

on:
  push:
    branches:
      - staging

jobs:
  test:
    name: Test
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout Project
        uses: actions/checkout@v1
        with:
          ref: ${{env.branch}}

      - name: Checkout Core
        uses: actions/checkout@v1
        with:
          repository: contazap/zap-microservices-core
          token: ${{secrets.GIT_TOKEN}}
          ref: ${{env.branch}}

      - name: Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0

      - name: Cache Maven
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{runner.os}}-m2-${{github.sha}}
          restore-keys: ${{runner.os}}-m2-

      - name: Core Build
        run: mvn clean install -f ../zap-microservices-core/pom.xml

      - name: Test
        run: mvn clean install

  docker-publish:
    name: Docker Hub - Publish
    runs-on: ubuntu-18.04
    needs: [test]
    steps:
      - uses: actions/checkout@v1

      - name: Cache Maven
        uses: actions/cache@v1
        with:
          path: ./.m2
          key: ${{runner.os}}-m2-${{github.sha}}
          restore-keys: ${{runner.os}}-m2-

      - name: Docker Hub - Login
        run: docker login -u="${{secrets.DOCKER_USER}}" -p="${{secrets.DOCKER_PASS}}"

      - name: Build Docker Image
        run: docker build --build-arg CORE_TAG=${{env.branch}} -t ${{env.docker-repo}}:${{env.branch}} .

      - name: Docker Hub - Publish
        run: docker push ${{env.docker-repo}}

  redeploy:
    name: Webhook
    runs-on: ubuntu-18.04
    needs: [docker-publish]
    steps:
      - name: Sending Webhook
        run: "curl -X POST -H \"Content-Type: application/json\" -H \"secret_auth_field:${{secrets.WEBHOOK_AUTH}}\" --data \"{ \\\"project\\\": \\\"${{secrets.PROJECT_NAME}}\\\"}\" ${{secrets.STAGING_WEBHOOK_URL}}"
